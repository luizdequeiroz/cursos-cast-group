// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using domain;

namespace app.Migrations
{
    [DbContext(typeof(CursosCastGroupContext))]
    [Migration("20200919201457_CursosCastGroup001")]
    partial class CursosCastGroup001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Comportamental",
                            RegisterDate = new DateTime(2020, 9, 19, 17, 14, 56, 695, DateTimeKind.Local).AddTicks(7707)
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Programação",
                            RegisterDate = new DateTime(2020, 9, 19, 17, 14, 56, 697, DateTimeKind.Local).AddTicks(1202)
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Qualidade",
                            RegisterDate = new DateTime(2020, 9, 19, 17, 14, 56, 697, DateTimeKind.Local).AddTicks(1251)
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Processos",
                            RegisterDate = new DateTime(2020, 9, 19, 17, 14, 56, 697, DateTimeKind.Local).AddTicks(1254)
                        });
                });

            modelBuilder.Entity("domain.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("QuantidadeAlunos")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CodigoCategoria");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("domain.Entities.Curso", b =>
                {
                    b.HasOne("domain.Entities.Categoria", "Categoria")
                        .WithMany("Cursos")
                        .HasForeignKey("CodigoCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
